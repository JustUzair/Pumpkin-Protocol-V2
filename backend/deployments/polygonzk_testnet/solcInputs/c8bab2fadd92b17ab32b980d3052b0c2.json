{
  "language": "Solidity",
  "sources": {
    "contracts/mintAllTestTokens.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\n\r\ncontract mintAllTestTokens {\r\n    address USDCAddress = 0xafab3903Baa32D35D6E843be4144D65176E8641C;\r\n    address WETHAddress = 0xeEae660205474B5E031e4Be8b39D2AfC5F718b8B;\r\n    address WBTCAddress = 0x092553A963a91Fd4FaCE7004DeA8A37827477901;\r\n    address MATICAddress = 0x3900e1636a6d39b46Fe427F44B0677746819D948;\r\n    address AAVEAddress = 0x1fC8B98d03b4EB308267D642703173072cD8a5Ff;\r\n\r\n    function mintAllTokens() public {\r\n        IERC20(USDCAddress).mint(1000 ether);\r\n        IERC20(WETHAddress).mint(1000 ether);\r\n        IERC20(WBTCAddress).mint(1000 ether);\r\n        IERC20(MATICAddress).mint(1000 ether);\r\n        IERC20(AAVEAddress).mint(1000 ether);\r\n\r\n        IERC20(USDCAddress).transfer(msg.sender,1000 ether);\r\n        IERC20(WETHAddress).transfer(msg.sender,1000 ether);\r\n        IERC20(WBTCAddress).transfer(msg.sender,1000 ether);\r\n        IERC20(MATICAddress).transfer(msg.sender,1000 ether);\r\n        IERC20(AAVEAddress).transfer(msg.sender,1000 ether);\r\n\r\n                \r\n    }\r\n    \r\n\r\n}   \r\n\r\ninterface IERC20 {\r\n    function mint(uint amount) external;\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint amount\r\n    ) external returns (bool);\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}