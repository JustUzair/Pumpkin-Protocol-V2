{
  "address": "0xa8544190D8B7c84354eaCb0609d27E2Fc7d6f1B7",
  "abi": [
    {
      "inputs": [],
      "name": "mintAllTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb5a4a63a30d9abd408b83ae7aa976bbed44365a91e827d0cf5b0025780304b74",
  "receipt": {
    "to": null,
    "from": "0x4e8fD06E8e4623589F1A4006b857472d70d2560E",
    "contractAddress": "0xa8544190D8B7c84354eaCb0609d27E2Fc7d6f1B7",
    "transactionIndex": 0,
    "gasUsed": "398728",
    "logsBloom": "0x
    "blockHash": "0xaaadd3d1470b3f86077b588eb10b1ca1e79e38c0591527875c0a95f92c79174e",
    "transactionHash": "0xb5a4a63a30d9abd408b83ae7aa976bbed44365a91e827d0cf5b0025780304b74",
    "logs": [],
    "blockNumber": 3190550,
    "cumulativeGasUsed": "398728",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 11,
  "solcInputHash": "f8e07c356874b20749509422464ce0f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"mintAllTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mintAllTestTokens.sol\":\"mintAllTestTokens\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mintAllTestTokens.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\r\\n    function mint(address to, uint amount) external;\\r\\n}\\r\\ncontract mintAllTestTokens {\\r\\n    address USDCAddress = 0xafab3903Baa32D35D6E843be4144D65176E8641C;\\r\\n    address WETHAddress = 0xeEae660205474B5E031e4Be8b39D2AfC5F718b8B;\\r\\n    address WBTCAddress = 0x092553A963a91Fd4FaCE7004DeA8A37827477901;\\r\\n    address MATICAddress = 0x3900e1636a6d39b46Fe427F44B0677746819D948;\\r\\n    address AAVEAddress = 0x1fC8B98d03b4EB308267D642703173072cD8a5Ff;\\r\\n\\r\\n    function mintAllTokens() public {\\r\\n\\r\\n        IERC20(USDCAddress).mint(msg.sender, 1000 ether);\\r\\n        IERC20(WETHAddress).mint(msg.sender, 1000 ether);\\r\\n        IERC20(WBTCAddress).mint(msg.sender, 1000 ether);\\r\\n        IERC20(MATICAddress).mint(msg.sender, 1000 ether);\\r\\n        IERC20(AAVEAddress).mint(msg.sender, 1000 ether);\\r\\n\\r\\n\\r\\n\\r\\n    }\\r\\n    \\r\\n\\r\\n}   \\r\\n\",\"keccak256\":\"0x9fff7408d474b531c79cf1d3e9abeb6f106bece9bef3c201edbb3f1af8b06a06\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405273afab3903baa32d35d6e843be4144d65176e8641c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073eeae660205474b5e031e4be8b39d2afc5f718b8b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073092553a963a91fd4face7004dea8a37827477901600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733900e1636a6d39b46fe427f44b0677746819d948600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731fc8b98d03b4eb308267d642703173072cd8a5ff600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156101b857600080fd5b50610421806101c86000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806365d5da7514610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b815260040161009e9291906103c2565b600060405180830381600087803b1580156100b857600080fd5b505af11580156100cc573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016101369291906103c2565b600060405180830381600087803b15801561015057600080fd5b505af1158015610164573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016101ce9291906103c2565b600060405180830381600087803b1580156101e857600080fd5b505af11580156101fc573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016102669291906103c2565b600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016102fe9291906103c2565b600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035d82610332565b9050919050565b61036d81610352565b82525050565b6000819050919050565b6000819050919050565b6000819050919050565b60006103ac6103a76103a284610373565b610387565b61037d565b9050919050565b6103bc81610391565b82525050565b60006040820190506103d76000830185610364565b6103e460208301846103b3565b939250505056fea2646970667358221220b6dce85a8bd599947a8832bcbeaa35a4845c613352b2440ad4d75ba94f74f9ee64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806365d5da7514610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b815260040161009e9291906103c2565b600060405180830381600087803b1580156100b857600080fd5b505af11580156100cc573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016101369291906103c2565b600060405180830381600087803b15801561015057600080fd5b505af1158015610164573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016101ce9291906103c2565b600060405180830381600087803b1580156101e857600080fd5b505af11580156101fc573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016102669291906103c2565b600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933683635c9adc5dea000006040518363ffffffff1660e01b81526004016102fe9291906103c2565b600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035d82610332565b9050919050565b61036d81610352565b82525050565b6000819050919050565b6000819050919050565b6000819050919050565b60006103ac6103a76103a284610373565b610387565b61037d565b9050919050565b6103bc81610391565b82525050565b60006040820190506103d76000830185610364565b6103e460208301846103b3565b939250505056fea2646970667358221220b6dce85a8bd599947a8832bcbeaa35a4845c613352b2440ad4d75ba94f74f9ee64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 87,
        "contract": "contracts/mintAllTestTokens.sol:mintAllTestTokens",
        "label": "USDCAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 90,
        "contract": "contracts/mintAllTestTokens.sol:mintAllTestTokens",
        "label": "WETHAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 93,
        "contract": "contracts/mintAllTestTokens.sol:mintAllTestTokens",
        "label": "WBTCAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 96,
        "contract": "contracts/mintAllTestTokens.sol:mintAllTestTokens",
        "label": "MATICAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 99,
        "contract": "contracts/mintAllTestTokens.sol:mintAllTestTokens",
        "label": "AAVEAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}